// K - K-sparing Diuretics DDI Alerting Rule

package com.sample

//list any import classes here.
import function com.sample.DRLLogger.*;

import java.util.*;
import java.lang.String;
import java.sql.Timestamp;

import com.sample.model.ConceptSetItem;
import com.sample.model.RHSState;

import edu.pitt.dbmi.ohdsiv5.db.ConditionEra;
import edu.pitt.dbmi.ohdsiv5.db.DrugEra;
import edu.pitt.dbmi.ohdsiv5.db.DrugExposure;
import edu.pitt.dbmi.ohdsiv5.db.DrugStrength;
import edu.pitt.dbmi.ohdsiv5.db.ExtendedDrugExposure;
import edu.pitt.dbmi.ohdsiv5.db.Measurement;
import edu.pitt.dbmi.ohdsiv5.db.Person;


/////////// 
// declare any global variables here
/////////// 
global java.lang.String currentDateStr;
global java.sql.Timestamp currentDate;
global java.sql.Timestamp within48hours;
global java.sql.Timestamp within28days;
global java.sql.Timestamp plus1day;

/////////// 
// declare any types here
/////////// 


/////////// 
// Rules
/////////// 

// basic check of any dosage or form of potassium and a potassium-sparing diuretic at the same time
rule "K - K-SPARING DIURETIC -- NO FILTER"
    when
      // First, we look for patients exposed to potassium on the ingredient level
      $clinDrugConcept1 : ConceptSetItem(csName == "Potassium Ingredients")
      $de1 : DrugEra(drugConceptId == $clinDrugConcept1.getConceptId()) 
      // Second, we similarly look for exposure to a diuretic on the ingredient level
      $clinDrugConcept2 : ConceptSetItem(csName == "K-sparing Diuretics Ingredients")
      $de2 : DrugEra(PersonId == $de1.getPersonId() && drugConceptId == $clinDrugConcept2.getConceptId())
      // Next, we identify the specific drug exposures for both potassium and the diuretic
      $clinDrugConcept3 : ConceptSetItem(csName == "Potassiums") 
      $dexp1 : ExtendedDrugExposure(personId != null && personId == $de1.getPersonId()
        && drugExposureStartDate != null && drugExposureStartDate >= currentDate && drugExposureStartDate < plus1day
        && drugConceptId == $clinDrugConcept3.getConceptId() && ingredientConceptId == $clinDrugConcept1.getConceptId())
      $clinDrugConcept4 : ConceptSetItem(csName == "K-sparing Diuretics")
      $dexp2 : ExtendedDrugExposure(personId != null && personId == $de1.getPersonId()
        && ((drugExposureStartDate >= $dexp1.getDrugExposureStartDate() && drugExposureStartDate <= $dexp1.getDrugExposureEndDate())
        || (drugExposureEndDate >= $dexp1.getDrugExposureStartDate() && drugExposureEndDate <= $dexp1.getDrugExposureEndDate()))
        && drugConceptId != null && drugConceptId == $clinDrugConcept4.getConceptId() 
        && ingredientConceptId != null && ingredientConceptId == $clinDrugConcept2.getConceptId())
      // This creates the patient as an object that can be used in the RHS state in the right hand side of the rule
      $person : Person(personId == $de1.getPersonId())
    then
      // This creates a new "state" for any patients who are found to be on both drugs...
      // This state can be used as an input on further rules to quickly filter to only those patients who have made it through previous rules
      RHSState rhsCur = new RHSState("basic concomitant exposure of K and a K-sparing diuretic", "yes", $person);
      // The output string reports simply that a potential interaction was identified through concurrent drug exposures and lists the drug IDs
      String s = String.format(
          "Matched drug exposures for the patient at the clinical drug level: Patient ID: %s; Potassium Preparation: %s; K-sparing Diuretic: %s;", 
          $de1.getPersonId(), 
          $clinDrugConcept3.getConceptId(), 
          $clinDrugConcept4.getConceptId());
      System.out.println(s);
      s = String.format("DATA\t%s\t%s\tK - K-sparing diuretic interaction\tbasic concomitant exposure\t%s\t%s\t%s\t%s",
            currentDateStr,
            $person.getPersonId(),
            $person.getGenderCUI(),
            ((double) ($person.getDobDateDiffInMillis(currentDate) / (1000 * 3600 * 24)) / 365),
            $dexp1.getLogInfo(),
            $dexp2.getLogInfo()
      );
      System.out.println(s);
end

// eplerenone leaf node 
rule "K - K-SPARING DIURETIC -- EPLERENONE"
    when
      $rhs : RHSState(stateName == "basic concomitant exposure of K and a K-sparing diuretic" && state == "yes", $person : person)

      $clinDrugConcept1 : ConceptSetItem(csName == "Eplerenones Ingredients")
      $de1 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())        
      $clinDrugConcept2 : ConceptSetItem(csName == "Eplerenones")
      $dexp1 : ExtendedDrugExposure(personId != null && personId == $de1.getPersonId()
        && drugExposureStartDate != null && drugExposureStartDate < plus1day && drugExposureEndDate >= currentDate
        && drugConceptId != null && drugConceptId == $clinDrugConcept2.getConceptId()
        && ingredientConceptId != null && ingredientConceptId == $clinDrugConcept1.getConceptId())  
    then
      RHSState rhsNN = new RHSState("potassium, eplerenone", "yes", $rhs.getPerson());
      insertLogical(rhsNN);
      String s = String.format(
          "K - K-sparing diuretic interaction for patient: %s.\n\tClinical implication: Risk of hyperkalemia likely.\n\tMitigating factor: (TODO).\n\tRecommendation: Avoid.\n\tExplanation: Eplerenone: %s; (TODO)", 
          $person.getPersonId(),
          $dexp1.getDrugConceptId());
      System.out.println(s);
      s = String.format("DATA\t%s\t%s\tK - K-sparing diuretic\tpotassium and eplerenone", currentDateStr, $person.getPersonId());
      System.out.println(s);  
end

// check if a K level test was done in the 48 hours prior to the current date, and this level was greater than the threshold of 5.5 mEq/L
rule "K - K-SPARING DIURETIC -- Recency of Lab Tests"
    when
      // First check that patient was exposed to potassium and a diuretic
      $rhs : RHSState(stateName == "basic concomitant exposure of K and a K-sparing diuretic" && state == "yes", $person : person)
      // Take patient from RHS and check when their serum postassium labs were taken and if this was between 5 and 5.5 mEq/L
      $meas1 : Measurement(personId == $person.getPersonId() && measurementConceptId == 3023103 
        && valueAsNumber >= 5.5 && unitConceptId == 9557
        && measurementDateTime >= within48hours && measurementDateTime <= currentDate)
    then  
      // Create a state object for the current node in the decision tree to be used by other LHS
      RHSState rhsNN = new RHSState("high serum potassium within 48 hours", "yes", $rhs.getPerson());
      insertLogical(rhsNN);
      String s = String.format(
          "K - K-sparing diuretic interaction for patient: %s.\n\tClinical implication: Risk of hyperkalemia likely.\n\tMitigating factor: (TODO).\n\tRecommendation: Avoid.\n\tExplanation: High serum potassium (%s mEq/L vs threshold of 5.5 mEq/L) within 48 hours (measurement taken: %s)",
          $person.getPersonId(),
          $meas1.getValueAsNumber(),
          $meas1.getMeasurementDateTime()
          );
      System.out.println(s);
      s = String.format("DATA\t%s\t%s\tK - K-sparing diuretic\tshigh serum potassium within 48 hours", currentDateStr, $person.getPersonId());
      System.out.println(s);          
end

// leaf node for high dosage of spironolactone (more than 25 mg/day) and current serum potassium is not high
rule "K - K-SPARING DIURETIC -- SPIRONOLACTONE DOSAGE"
    when
      $rhs : RHSState(stateName == "basic concomitant exposure of K and a K-sparing diuretic" && state == "yes", $person : person)
      not ($rhs2 : RHSState(stateName == "high serum potassium within 48 hours" && state == "yes" && person.getPersonId() == $person.getPersonId()))

      $clinDrugConcept1 : ConceptSetItem(csName == "Spironolactones Ingredients")
      $de1 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())        
      $clinDrugConcept2 : ConceptSetItem(csName == "Spironolactones")
      $dexp1 : ExtendedDrugExposure(personId != null && personId == $de1.getPersonId()
        && drugExposureStartDate != null && drugExposureStartDate < plus1day && drugExposureEndDate >= currentDate
        && drugConceptId != null && drugConceptId == $clinDrugConcept2.getConceptId()
        && ingredientConceptId != null && ingredientConceptId == $clinDrugConcept1.getConceptId() && dailyDosage > 25.0)  
    then
      RHSState rhsNN = new RHSState("potassium, spironolactone high dosage", "yes", $rhs.getPerson());
      insertLogical(rhsNN);
      String s = String.format(
          "K - K-sparing diuretic interaction for patient: %s.\n\tClinical implication: Risk of hyperkalemia possible.\n\tMitigating factor: (TODO).\n\tRecommendation: Assess risk and take action if necessary.\n\tExplanation: High dose of Spironolactone = %s (Daily Dosage: %s mg/day Threshold Value: 25 mg/day). Current serum potassium level is not high", 
          $person.getPersonId(),
          $dexp1.getDrugConceptId(),
          $dexp1.getDailyDosage());
      System.out.println(s);
      s = String.format("DATA\t%s\t%s\tK - K-sparing diuretic\tpotassium and spironolactone high dosage", currentDateStr, $person.getPersonId());
      System.out.println(s);
end

// leaf node for high dosage of amiloride (more than 10 mg/day) and current serum potassium is not high
rule "K - K-SPARING DIURETIC -- AMILORIDE DOSAGE"
    when
      $rhs : RHSState(stateName == "basic concomitant exposure of K and a K-sparing diuretic" && state == "yes", $person : person)
      not ($rhs2 : RHSState(stateName == "high serum potassium within 48 hours" && state == "yes" && person.getPersonId() == $person.getPersonId()))

      $clinDrugConcept1 : ConceptSetItem(csName == "Amilorides Ingredients")
      $de1 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())        
      $clinDrugConcept2 : ConceptSetItem(csName == "Amilorides")
      $dexp1 : ExtendedDrugExposure(personId != null && personId == $de1.getPersonId()
        && drugExposureStartDate != null && drugExposureStartDate < plus1day && drugExposureEndDate >= currentDate
        && drugConceptId != null && drugConceptId == $clinDrugConcept2.getConceptId()
        && ingredientConceptId != null && ingredientConceptId == $clinDrugConcept1.getConceptId() && dailyDosage > 10.0)  
    then
      RHSState rhsNN = new RHSState("potassium, amiloride high dosage", "yes", $rhs.getPerson());
      insertLogical(rhsNN);
      String s = String.format(
          "K - K-sparing diuretic interaction for patient: %s.\n\tClinical implication: Risk of hyperkalemia possible.\n\tMitigating factor: (TODO).\n\tRecommendation: Assess risk and take action if necessary.\n\tExplanation: High dose of Amiloride = %s (Daily Dosage: %s mg/day Threshold Value: 10 mg/day). Current serum potassium level is not high", 
          $person.getPersonId(),
          $dexp1.getDrugConceptId(),
          $dexp1.getDailyDosage());
      System.out.println(s);
      s = String.format("DATA\t%s\t%s\tK - K-sparing diuretic\tpotassium and amiloride high dosage", currentDateStr, $person.getPersonId());
      System.out.println(s);  
end

// leaf node for high dosage of triamterene (more than 37.5 mg/day) and current serum potassium is not high
rule "K - K-SPARING DIURETIC -- TRIAMTERENE DOSAGE"
    when
      $rhs : RHSState(stateName == "basic concomitant exposure of K and a K-sparing diuretic" && state == "yes", $person : person)
      not ($rhs2 : RHSState(stateName == "high serum potassium within 48 hours" && state == "yes" && person.getPersonId() == $person.getPersonId()))

      $clinDrugConcept1 : ConceptSetItem(csName == "Triamterenes Ingredients")
      $de1 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())        
      $clinDrugConcept2 : ConceptSetItem(csName == "Triamterenes")
      $dexp1 : ExtendedDrugExposure(personId != null && personId == $de1.getPersonId()
        && drugExposureStartDate != null && drugExposureStartDate < plus1day && drugExposureEndDate >= currentDate
        && drugConceptId != null && drugConceptId == $clinDrugConcept2.getConceptId()
        && ingredientConceptId != null && ingredientConceptId == $clinDrugConcept1.getConceptId() && dailyDosage > 37.5)  
    then
      RHSState rhsNN = new RHSState("potassium, triamterene high dosage", "yes", $rhs.getPerson());
      insertLogical(rhsNN);
      String s = String.format(
          "K - K-sparing diuretic interaction for patient: %s.\n\tClinical implication: Risk of hyperkalemia possible.\n\tMitigating factor: (TODO).\n\tRecommendation: Assess risk and take action if necessary.\n\tExplanation: High dose of Triamterene = %s (Daily Dosage: %s mg/day Threshold Value: 37.5 mg/day). Current serum potassium level is not high", 
          $person.getPersonId(),
          $dexp1.getDrugConceptId(),
          $dexp1.getDailyDosage());
      System.out.println(s);
      s = String.format("DATA\t%s\t%s\tK - K-sparing diuretic\tpotassium and triamterene high dosage", currentDateStr, $person.getPersonId());
      System.out.println(s);
end
