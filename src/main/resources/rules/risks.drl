//Last Updated 2017-01-10
package com.sample

//list any import classes here.
import function com.sample.DRLLogger.*;

import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.Calendar;
import java.lang.String;

import com.sample.model.ConceptSetItem;
import com.sample.model.RHSState;

import edu.pitt.dbmi.ohdsiv5.db.ConditionEra;
import edu.pitt.dbmi.ohdsiv5.db.DrugEra;
import edu.pitt.dbmi.ohdsiv5.db.DrugExposure;
import edu.pitt.dbmi.ohdsiv5.db.DrugStrength;
import edu.pitt.dbmi.ohdsiv5.db.ExtendedDrugExposure;
import edu.pitt.dbmi.ohdsiv5.db.Measurement;
import edu.pitt.dbmi.ohdsiv5.db.Person;


/////////// 
// declare any global variables here
/////////// 
global org.hibernate.Session hibernateSession;
global java.util.Calendar currentDate;
global java.util.Calendar within48date;


/////////// 
// declare any types here
/////////// 


/////////// 
// Rules
/////////// 
/*
rule "WARFARIN - NSAID -- NO FILTER" // Concept sets exclude topical/opthalmic NSAIDs
    when
      // Warfarin ingredient drug era
      $clinDrugConcept1 : ConceptSetItem(csName == "Warfarin Ingredients")
      $de1 : DrugEra(drugConceptId == $clinDrugConcept1.getConceptId()) 
      
      // NSAID ingredient drug era
      $clinDrugConcept2 : ConceptSetItem(csName == "NSAIDs Ingredients")
      $de2 : DrugEra(PersonId == $de1.getPersonId() && drugConceptId == $clinDrugConcept2.getConceptId())

      // Specific warfarin exposure - DrugExposures often only have
      //the start date so the DrugEra is used to infer the exposure
      //period
      $clinDrugConcept3 : ConceptSetItem(csName == "Warfarins")
      $dexp1 : ExtendedDrugExposure(personId == $de1.getPersonId() && drugExposureStartDate == $de1.getDrugEraStartDate() && drugConceptId == $clinDrugConcept3.getConceptId() && ingredientConceptId == $clinDrugConcept1.getConceptId())
   
      // Specific NSAID exposure
      $clinDrugConcept4 : ConceptSetItem(csName == "NSAIDs")
      $dexp2 : ExtendedDrugExposure(personId == $de1.getPersonId() && drugExposureStartDate == $de2.getDrugEraStartDate() && drugConceptId == $clinDrugConcept4.getConceptId() && ingredientConceptId == $clinDrugConcept2.getConceptId())

      $person : Person(personId == $de1.getPersonId())
    then	
      // Create a state object for the current node in the decision tree to be used by other LHS
      RHSState rhsCur = new RHSState("basic concomitant exposure of warfarin and NSAID", "yes", $person);
      insertLogical(rhsCur);
    
      String s = String.format(
          "Matched drug exposures for the patient at the clinical drug level: Patient ID: %s; Anticoagulant: %s; NSAID: %s.", 
          $de1.getPersonId(), 
          $clinDrugConcept3.getConceptId(), 
          $clinDrugConcept4.getConceptId());
      System.out.println(s);
end

rule "WARFARIN - NSAID -- PPI or misoprostol"
    when
        $rhs : RHSState(stateName == "basic concomitant exposure of warfarin and NSAID" && state == "yes")
        
        // PPI or Misoprostol drug era
        $clinDrugConcept1 : ConceptSetItem(csName == "PPIs Ingredients")
        $de1 : DrugEra(personId == $rhs.getPerson().getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())
                                      
        // Specific PPI or Misoprostol exposure 
        $clinDrugConcept2 : ConceptSetItem(csName == "PPIs")
        $dexp1 : ExtendedDrugExposure(personId == $rhs.getPerson().getPersonId() && drugExposureStartDate == $de1.getDrugEraStartDate() && drugConceptId == $clinDrugConcept2.getConceptId() && ingredientConceptId == $clinDrugConcept1.getConceptId())                
    then	
        RHSState rhsNN = new RHSState("proton pump inhibitor or misoprostol", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
        
        String s = String.format(
          "Warfarin - NSAID interaction for patient: %s.\n\tClinical implication: Possible increased risk of UGIB or other bleeding\n\tMitigating factor: Presence of PPI or misoprostol (%s).\n\tRecommendation: Assess risk and take action if necessary.\n\tExplanation:  Proton pump inhibitors and misoprostol may reduce the risk of UGIB in patients receiving NSAIDs and warfarin.ï€ ", 
          $de1.getPersonId(), 
          $dexp1.getDrugConceptId());
        System.out.println(s);
end

rule "WARFARIN - NSAID -- no PPI or misoprostol - YES AGE"
    when
        $rhs1 : RHSState(stateName == "basic concomitant exposure of warfarin and NSAID" && state == "yes", $person : person)

        not ($rhs2 : RHSState(stateName == "proton pump inhibitor or misoprostol" && state == "yes" && person.getPersonId() == $person.getPersonId()))
        
        Person(personId == $person.getPersonId() && yearOfBirth <= 1951)
    then	
        RHSState rhsNN = new RHSState("no PPI or misoprostol - yes age or conditions", "yes", $person);
        insertLogical(rhsNN);
        
        String s = String.format(
            "Matched drug exposures for the patient with AGE as a risk factor - Patient ID: %s; Age: %s, which exceeds the threshold value of 65.", 
            $person.getPersonId(),
	    (currentDate.get(Calendar.YEAR) - $person.getYearOfBirth()));
        System.out.println(s);
end

rule "WARFARIN - NSAID -- no PPI or misoprostol - YES CONDITIONS"
    when
        $rhs1 : RHSState(stateName == "basic concomitant exposure of warfarin and NSAID" && state == "yes", $person : person)

        not ($rhs2 : RHSState(stateName == "proton pump inhibitor or misoprostol" && state == "yes" && person.getPersonId() == $person.getPersonId()))
	
	$condConcept1 : ConceptSetItem(csName == "History of GI Bleeds")
	
        $ce1 : ConditionEra(PersonId == $person.getPersonId() && conditionConceptId == $condConcept1.getConceptId())
    then	
        RHSState rhsNN = new RHSState("no PPI or misoprostol - yes age or conditions", "yes", $person);
        insertLogical(rhsNN);
        
        String s = String.format(
            "Matched drug exposures for the patient with a CONDITION as a risk factor - Patient ID: %s; Condition: %s.", 
            $person.getPersonId(),
	    $ce1.getConditionConceptId());
        System.out.println(s);
end

rule "WARFARIN - NSAID -- no PPI or misoprostol - NO age or conditions - YES other risk drugs"
    when
        $rhs1 : RHSState(stateName == "basic concomitant exposure of warfarin and NSAID" && state == "yes", $person : person)

        not (RHSState(stateName == "proton pump inhibitor or misoprostol" && state == "yes" && person.getPersonId() == $person.getPersonId()))
        
        not (RHSState(stateName == "no PPI or misoprostol - yes age or conditions" && state == "yes" && person.getPersonId() == $person.getPersonId()))
        
        $clinDrugConcept1 : ConceptSetItem(csName == "Corticosteroids Ingredients" || csName == "Aldosterone Antagonists Ingredients")
        $de1 : DrugEra(personId == $rhs1.getPerson().getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())
        
        $clinDrugConcept2 : ConceptSetItem(csName == "Systemic Corticosteroids" || csName == "Aldosterone Antagonists")
        $dexp1 : ExtendedDrugExposure(personId == $rhs1.getPerson().getPersonId() && drugExposureStartDate == $de1.getDrugEraStartDate() && drugConceptId == $clinDrugConcept2.getConceptId() && (ingredientConceptId == $clinDrugConcept1.getConceptId() || ingredientConceptId == $clinDrugConcept2.getConceptId()))        
    then	
        RHSState rhsNN = new RHSState("no PPI or misoprostol - NO age or conditions - YES other risk drugs", "yes", $person);
        insertLogical(rhsNN);
        
        String s = String.format(
            "Warfarin - NSAID interaction for patient: %s.\n\tClinical implication: Increased risk of UGIB or other bleeding\n\tContextual factor: No age or condition risks but risk increasing drug factor (%s).\n\tRecommendation: Use only if benefit outweighs risk.\n\tExplanation: Both corticosteroids and aldosterone antagonists have been shown to substantially increase the risk of UGIB in patients on NSAIDs, with relative risks of 12.8 and 11 respectively compared to a risk of 4.3 with NSAIDs \talone (Masclee et al. Gastroenterology 2014;147:784-92.)", 
            $person.getPersonId(), 
            $dexp1.getDrugConceptId());
        System.out.println(s);
end

rule "WARFARIN - NSAID -- no PPI or misoprostol - YES age or conditions - YES other risk drugs"
    when
        $rhs1 : RHSState(stateName == "basic concomitant exposure of warfarin and NSAID" && state == "yes", $person : person)

        not (RHSState(stateName == "proton pump inhibitor or misoprostol" && state == "yes" && person.getPersonId() == $person.getPersonId()))
        
        RHSState(stateName == "no PPI or misoprostol - yes age or conditions" && state == "yes" && person.getPersonId() == $person.getPersonId())
        
        $clinDrugConcept1 : ConceptSetItem(csName == "Corticosteroids Ingredients" || 
                                      csName == "Aldosterone Antagonists Ingredients")
        $de1 : DrugEra(personId == $rhs1.getPerson().getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())
        
        $clinDrugConcept2 : ConceptSetItem(csName == "Systemic Corticosteroids" || 
                                           csName == "Aldosterone Antagonists")
        $dexp1 : ExtendedDrugExposure(personId == $rhs1.getPerson().getPersonId() && drugExposureStartDate == $de1.getDrugEraStartDate() && drugConceptId == $clinDrugConcept2.getConceptId() && (ingredientConceptId == $clinDrugConcept1.getConceptId() || ingredientConceptId == $clinDrugConcept2.getConceptId()))        
    then	
        RHSState rhsNN = new RHSState("no PPI or misoprostol - YES age or conditions - YES other risk drugs", "yes", $person);
        insertLogical(rhsNN);
        
        String s = String.format(
            "Warfarin - NSAID interaction for patient: %s.\n\tClinical implication: Substantially increased risk of UGIB or other bleeding\n\tContextual factor: Age or condition risks AND risk increasing drug factor (%s).\n\tRecommendation: Use only if benefit outweighs risk.\n\tExplanation: Patients with a history of UGIB or peptic ulcer may have an increased risk of UGIB from this interaction. The extent to which older age is an independent risk factor for UGIB due to these interactions is not firmly \n\testablished, but UGIB in general is known to increase with age. Both corticosteroids and aldosterone antagonists have been shown to substantially increase the risk of UGIB in patients on NSAIDs, with relative risks of 12.8 and \n\t11 respectively compared to a risk of 4.3 with NSAIDs alone (Masclee et al. Gastroenterology 2014;147:784-92.)", 
            $person.getPersonId(), 
            $dexp1.getDrugConceptId());
        System.out.println(s);
end

rule "WARFARIN - NSAID -- no PPI or misoprostol - YES age or conditions - NO other risk drugs"
    when
        $rhs1 : RHSState(stateName == "basic concomitant exposure of warfarin and NSAID" && state == "yes", $person : person)

        not (RHSState(stateName == "proton pump inhibitor or misoprostol" && state == "yes" && person.getPersonId() == $person.getPersonId()))
        
        RHSState(stateName == "no PPI or misoprostol - yes age or conditions" && state == "yes" && person.getPersonId() == $person.getPersonId())
        
        not (RHSState(stateName == "no PPI or misoprostol - YES age or conditions - YES other risk drugs" && state == "yes" && person.getPersonId() == $person.getPersonId()))
    then	
        RHSState rhsNN = new RHSState("no PPI or misoprostol - YES age or conditions - NO other risk drugs", "yes", $person);
        insertLogical(rhsNN);
        
        String s = String.format(
            "Warfarin - NSAID interaction for patient: %s.\n\tClinical implication: Increased risk of UGIB or other bleeding\n\tContextual factor: Age or condition risks but NO risk increasing drug factor.\n\tRecommendation: Use only if benefit outweighs risk.\n\tExplanation: Patients with a history of UGIB or peptic ulcer may have an increased risk of UGIB from this interaction. The \n\textent to which older age is an independent risk factor for UGIB due to these interactions is not firmly established, but \n\tUGIB in general is known to increase with age.", 
            $person.getPersonId());
        System.out.println(s);
end

rule "WARFARIN - NSAID -- no PPI or misoprostol - NO age or conditions - NO other risk drugs"
    when
        $rhs1 : RHSState(stateName == "basic concomitant exposure of warfarin and NSAID" && state == "yes", $person : person)

        not (RHSState(stateName == "proton pump inhibitor or misoprostol" && state == "yes" && person.getPersonId() == $person.getPersonId()))
        
        not (RHSState(stateName == "no PPI or misoprostol - yes age or conditions" && state == "yes" && person.getPersonId() == $person.getPersonId()))
	
	not (RHSState(stateName == "no PPI or misoprostol - NO age or conditions - YES other risk drugs" && state == "yes" && person.getPersonId() == $person.getPersonId()))     
    then	
        RHSState rhsNN = new RHSState("no PPI or misoprostol - NO age or conditions - NO other risk drugs", "yes", $person);
        insertLogical(rhsNN);
        
        String s = String.format(
            "Warfarin - NSAID interaction for patient: %s.\n\tClinical implication: Increased risk of UGIB or other bleeding.\n\tContextual factor: No age, condition, or drug factor risks.\n\tRecommendation: Use only if benefit outweighs risk.", 
            $person.getPersonId());
        System.out.println(s);
end

rule "K/K-SPARING DIURETIC -- NO FILTER"
    when
      // Potassium prep ingredient drug era
      $clinDrugConcept1 : ConceptSetItem(csName == "Potassium Ingredients")
      $de1 : DrugEra(drugConceptId == $clinDrugConcept1.getConceptId())       
      // Diuretics ingredient drug era
      $clinDrugConcept2 : ConceptSetItem(csName == "K-sparing Diuretics Ingredients")
      $de2 : DrugEra(personId == $de1.getPersonId() && drugConceptId == $clinDrugConcept2.getConceptId())
      // Load concept sets
      $clinDrugConcept3 : ConceptSetItem(csName == "Potassiums")
      $clinDrugConcept4 : ConceptSetItem(csName == "K-sparing Diuretics")
      // Check exposure to a potassium preparation
      $dexp1 : ExtendedDrugExposure(personId == $de1.getPersonId() && drugExposureStartDate == $de1.getDrugEraStartDate() && drugConceptId == $clinDrugConcept3.getConceptId() && ingredientConceptId == $clinDrugConcept1.getConceptId())
      $dexp2 : ExtendedDrugExposure(personId == $de1.getPersonId() && drugExposureStartDate == $de2.getDrugEraStartDate() && drugConceptId == $clinDrugConcept4.getConceptId() && ingredientConceptId == $clinDrugConcept2.getConceptId())
      // Set the patient to a person variable so the RHS can be assigned
      $person : Person(personId == $de1.getPersonId())
    then
      // Create a state object for the current node in the decision tree to be used by other LHS
      RHSState rhsCur = new RHSState("basic concomitant exposure of K and a K-sparing diuretic", "yes", $person);
      insertLogical(rhsCur);
      // Output a string that informs the user that there has been a match on drug exposures, indicating that the rules will proceed to the next steps
      String s = String.format(
          "Matched drug exposures for the patient at the clinical drug level: Patient ID: %s; Potassium Preparation: %s; K-sparing Diuretic: %s.", 
          $de1.getPersonId(), 
          $clinDrugConcept3.getConceptId(), 
          $clinDrugConcept4.getConceptId());
      System.out.println(s);
end

rule "K/K-SPARING DIURETIC -- Triamterene Dosage"
    when
	// First check that patient was exposed to potassium and a diuretic
        $rhs : RHSState(stateName == "basic concomitant exposure of K and a K-sparing diuretic" && state == "yes", $person : person)
	// Next, select drug eras for triamterene only (MAYBE USE A CONCEPT SET HERE INSTEAD?)
	$clinDrugConcept1 : ConceptSetItem(csName == "Triamterenes Ingredients")
        $de1 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())
	$clinDrugConcept2 : ConceptSetItem(csName == "Triamterenes")
	$dexp1 : ExtendedDrugExposure(personId == $de1.getPersonId() && drugExposureStartDate == $de1.getDrugEraStartDate() && drugConceptId == $clinDrugConcept2.getConceptId() && ingredientConceptId == $de1.getDrugConceptId() && dailyDosage > 37.5)
    then	
	// Create a state object for the current node in the decision tree to be used by other LHS
        RHSState rhsNN = new RHSState("high triamterene dosage", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
        // Output a string that provides clinician with details for action
        String s = String.format(
          "K - K-sparing diuretic interaction for patient: %s.\n\tClinical implication: Risk of hyperkalemia.\n\tMitigating factor: High triamterene dosage (Daily Dosage: %s mg/day, Threshold Value: 37.5 mg/day).\n\tRecommendation: Use only if benefit outweighs risk.\n\tExplanation: High dosages of triamterene can increase the risk of hyperkalemia.", 
          $person.getPersonId(),
	  $dexp1.getDailyDosage());
        System.out.println(s);
end

rule "K/K-SPARING DIURETIC -- Recency of Lab Tests"
    when
	// First check that patient was exposed to potassium and a diuretic
        $rhs : RHSState(stateName == "basic concomitant exposure of K and a K-sparing diuretic" && state == "yes", $person : person)
	// Make sure they don't meet the triamterene rule
	not ($rhs2 : RHSState(stateName == "high triamterene dosage" && state == "yes" && person.getPersonId() == $person.getPersonId()))
	// Take patient from RHS and check when their serum postassium labs were taken
	not ($meas1 : Measurement(personId == $person.getPersonId() && measurementConceptId == 3023103 && measurementDate.getTime() <= within48date.getTimeInMillis()))
    then	
	// Create a state object for the current node in the decision tree to be used by other LHS
        RHSState rhsNN = new RHSState("invalid potassium labs", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
        // Output a string that provides clinician with details for action
        String s = String.format(
          "K - K-sparing diuretic interaction for patient: %s.\n\tClinical implication: Risk of hyperkalemia.\n\tMitigating factor: Serum potassium not measured within 48 hours.\n\tRecommendation: Use only if benefit outweighs risk.\n\tExplanation: Serum potassium was not measured recently, and a high serum potassium is a risk factor that increases chance of hyperkalemia \n\tin patients on both a potassium preparation and a K-sparing diuretic.", 
          $person.getPersonId());
        System.out.println(s);
end

rule "K/K-SPARING DIURETIC -- Serum Potassium"
    when
	// First check that patient was exposed to potassium and a diuretic
        $rhs : RHSState(stateName == "basic concomitant exposure of K and a K-sparing diuretic" && state == "yes", $person : person)
	// Make sure they don't meet the triamterene rule
	not ($rhs2 : RHSState(stateName == "high triamterene dosage" && state == "yes" && person.getPersonId() == $person.getPersonId()))
	// Second, make sure that a serum potassium value was reported within 48 hours
	not ($rhs2 : RHSState(stateName == "invalid potassium labs" && state == "yes" && person.getPersonId() == $person.getPersonId()))
	// Take patient from RHS and check if that patient has a serum potassium value of > 4.5
	$measurement : Measurement(personId == $person.getPersonId() && measurementConceptId == 3023103 && valueAsNumber > 4.5 && unitConceptId == 9557)
    then	
	// Create a state object for the current node in the decision tree to be used by other LHS
        RHSState rhsNN = new RHSState("serum potassium high", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
        // Output a string that provides clinician with details for action
        String s = String.format(
          "K - K-sparing diuretic interaction for patient: %s.\n\tClinical implication: Possible increased risk of hyperkalemia.\n\tMitigating factor: High serum potassium (%s mEq/L, compared to a threshold value of 4.5 mEq/L).\n\tRecommendation: Use only if benefit outweighs risk.\n\tExplanation:  High serum potassium is considered to be a risk factor that increases chance of hyperkalemia in patients on \n\tboth a potassium preparation and a K-sparing diuretic.", 
          $person.getPersonId(),
	  $measurement.getValueAsNumber());
        System.out.println(s);
end

rule "K/K-SPARING DIURETIC -- ACEi or ARB"
    when
	// Fist check if patient was exposed to both potassium and a diuretic
        $rhs : RHSState(stateName == "basic concomitant exposure of K and a K-sparing diuretic" && state == "yes", $person : person)
	// Make sure they don't meet the triamterene rule
	not ($rhs2 : RHSState(stateName == "high triamterene dosage" && state == "yes" && person.getPersonId() == $person.getPersonId()))
	// Second, make sure that a serum potassium value was reported within 48 hours
	not ($rhs2 : RHSState(stateName == "invalid potassium labs" && state == "yes" && person.getPersonId() == $person.getPersonId()))
	// Next make sure the patient did not meet the high serum potassium rule (shouldn't continue on if so)
	not ($rhs2 : RHSState(stateName == "serum potassium high" && state == "yes" && person.getPersonId() == $person.getPersonId()))
        // PPI or Misoprostol drug era
        $clinDrugConcept1 : ConceptSetItem(csName == "ACEis and ARBs Ingredients")
        $de1 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())        
        // Specific PPI or Misoprostol exposure 
        $clinDrugConcept2 : ConceptSetItem(csName == "ACEis and ARBs")
        $dexp1 : ExtendedDrugExposure(personId == $person.getPersonId() && drugExposureStartDate == $de1.getDrugEraStartDate() && drugConceptId == $clinDrugConcept2.getConceptId() && ingredientConceptId == $clinDrugConcept1.getConceptId())                
    then	
        RHSState rhsNN = new RHSState("ACEi or ARB", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
        
        String s = String.format(
          "K - K-sparing diuretic interaction for patient: %s.\n\tClinical implication: Possible increased risk of hyperkalemia.\n\tMitigating factor: Presence of ACEi or ARB (%s).\n\tRecommendation: Use only if benefit outweighs risk.\n\tExplanation:  ACEi and ARB are considered risk factors that increase chance of hyperkalemia in patients on both KCL and a \n\tK-sparing diuretic.", 
          $de1.getPersonId(), 
          $dexp1.getDrugConceptId());
        System.out.println(s);
end

rule "K/K-SPARING DIURETIC -- Creatinine Clearance"
    when
	// First check that patient was exposed to potassium and a diuretic
        $rhs : RHSState(stateName == "basic concomitant exposure of K and a K-sparing diuretic" && state == "yes", $person : person)
	// Make sure they don't meet the triamterene rule
	not ($rhs2 : RHSState(stateName == "high triamterene dosage" && state == "yes" && person.getPersonId() == $person.getPersonId()))
	// Second, make sure that a serum potassium value was reported within 48 hours
	not ($rhs2 : RHSState(stateName == "invalid potassium labs" && state == "yes" && person.getPersonId() == $person.getPersonId()))
	// Next make sure the patient did not meet the high serum potassium rule
	not ($rhs2 : RHSState(stateName == "serum potassium high" && state == "yes" && person.getPersonId() == $person.getPersonId()))
	// Next make sure the patient did not meet the ACEi or ARB rule
	not ($rhs3 : RHSState(stateName == "ACEi or ARB" && state == "yes" && person.getPersonId() == $person.getPersonId()))
	// Take patient from RHS and check if that patient has a creatinine clerance less than 30
	$measurement : Measurement(personId == $person.getPersonId() && measurementConceptId == 3016723 && valueAsNumber < 30 && unitConceptId == 8795)
    then	
	// Create a state object for the current node in the decision tree to be used by other LHS
        RHSState rhsNN = new RHSState("creatinine clearance low", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
        // Output a string that provides clinician with details for action
        String s = String.format(
          "K - K-sparing diuretic interaction for patient: %s.\n\tClinical implication: Possible increased risk of hyperkalemia.\n\tMitigating factor: Low creatinine clearance level (%s ml/min, compared to a threshold value of 30 ml/min).\n\tRecommendation: Use only if benefit outweighs risk.\n\tExplanation:  Low creatinine clearance level is considered to be a risk factor that increases chance of hyperkalemia in \n\tpatients on both a potassium preparation and a K-sparing diuretic.", 
          $person.getPersonId(),
	  $measurement.getValueAsNumber());
        System.out.println(s);
end

rule "K/K-SPARING DIURETIC -- Potassium Dosage"
    when
	// First check that patient was exposed to potassium and a diuretic
        $rhs : RHSState(stateName == "basic concomitant exposure of K and a K-sparing diuretic" && state == "yes", $person : person)
	// Make sure they don't meet the triamterene rule
	not ($rhs2 : RHSState(stateName == "high triamterene dosage" && state == "yes" && person.getPersonId() == $person.getPersonId()))
	// Second, make sure that a serum potassium value was reported within 48 hours
	not ($rhs2 : RHSState(stateName == "invalid potassium labs" && state == "yes" && person.getPersonId() == $person.getPersonId()))
	// Next make sure the patient did not meet the high serum potassium rule
	not ($rhs2 : RHSState(stateName == "serum potassium high" && state == "yes" && person.getPersonId() == $person.getPersonId()))
	// Next make sure the patient did not meet the ACEi or ARB rule
	not ($rhs3 : RHSState(stateName == "ACEi or ARB" && state == "yes" && person.getPersonId() == $person.getPersonId()))
	// Finally, make sure the patient did not meet the creatine clearance rule
	not ($rhs4 : RHSState(stateName == "creatinine clearance low" && state == "yes" && person.getPersonId() == $person.getPersonId()))
	// Take patient from RHS and check if that patient has a serum potassium value of < 4.5
	$clinDrugConcept1 : ConceptSetItem(csName == "Potassium Ingredients")
	$de1 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())
	$clinDrugConcept2 : ConceptSetItem(csName == "Potassiums")
	$dexp1 : ExtendedDrugExposure(personId == $person.getPersonId() && drugExposureStartDate == $de1.getDrugEraStartDate() && drugConceptId == $clinDrugConcept2.getConceptId() && ingredientConceptId == $clinDrugConcept1.getConceptId()
	&& dailyDosage >= 80.0)
    then	
	// Create a state object for the current node in the decision tree to be used by other LHS
        RHSState rhsNN = new RHSState("k - diuretic, normal potassium, no drugs, normal creatinine, high potassium dose", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
        // Output a string that provides clinician with details for action
        String s = String.format(
          "K - K-sparing diuretic interaction for patient: %s.\n\tClinical implication: Possible increased risk of hyperkalemia.\n\tMitigating factor: High dosage of potassium (%s mEq/day, compared to a threshold value of 80 mEq/day).\n\tRecommendation: Use only if benefit outweighs risk.\n\tExplanation: Giving a patient on a K-sparing diuretic a high dose of potassium is considered to be a risk factor that \n\tincreases chance of hyperkalemia.", 
          $person.getPersonId(),
	  $dexp1.getDailyDosage());
        System.out.println(s);
end

rule "FLUCONAZOLE - OPIOIDS -- BASIC INTERACTION AND DOSAGE CHECK"
    when
      // Fluconazole ingredient drug era
      $clinDrugConcept1 : ConceptSetItem(csName == "Fluconazoles Ingredients")
      $de1 : DrugEra(drugConceptId == $clinDrugConcept1.getConceptId()) 
      
      // Opioids ingredient drug era
      $clinDrugConcept2 : ConceptSetItem(csName == "Opioids Ingredients")
      $de2 : DrugEra(PersonId == $de1.getPersonId() && drugConceptId == $clinDrugConcept2.getConceptId())

      // Specific fluconazole exposure
      $clinDrugConcept3 : ConceptSetItem(csName == "Fluconazoles")
      $dexp1 : ExtendedDrugExposure(personId == $de1.getPersonId() && drugExposureStartDate == $de1.getDrugEraStartDate() 
      && drugConceptId == $clinDrugConcept3.getConceptId() && ingredientConceptId == $clinDrugConcept1.getConceptId() && dailyDosage > 50.0)
   
      // Specific opioids exposure
      $clinDrugConcept4 : ConceptSetItem(csName == "Opioids")
      $dexp2 : ExtendedDrugExposure(personId == $de1.getPersonId() && drugExposureStartDate == $de2.getDrugEraStartDate() 
      && drugConceptId == $clinDrugConcept4.getConceptId() && ingredientConceptId == $clinDrugConcept2.getConceptId())

      $person : Person(personId == $de1.getPersonId())
    then	
      RHSState rhsCur = new RHSState("basic concomitant exposure of a high dose of fluconazole and an opioid", "yes", $person);
      insertLogical(rhsCur);
    
      String s = String.format(
          "Matched drug exposures for the patient at the clinical drug level: Patient ID: %s; Fluconazole: %s (Daily Dosage: %s mg/day, Threshold Value: 50.0 mg/day); Opioid: %s.", 
          $de1.getPersonId(), 
          $clinDrugConcept3.getConceptId(),
	  $dexp1.getDailyDosage(),
          $clinDrugConcept4.getConceptId());
      System.out.println(s);
end

rule "FLUCONAZOLE - OPIOIDS -- FENTANYL"
    when
        $rhs : RHSState(stateName == "basic concomitant exposure of a high dose of fluconazole and an opioid" && state == "yes")
        
        // PPI or Misoprostol drug era
        $clinDrugConcept1 : ConceptSetItem(csName == "Fentanyls Ingredients")
        $de1 : DrugEra(personId == $rhs.getPerson().getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())
                                      
        // Specific PPI or Misoprostol exposure 
        $clinDrugConcept2 : ConceptSetItem(csName == "Fentanyls")
        $dexp1 : ExtendedDrugExposure(personId == $rhs.getPerson().getPersonId() && drugExposureStartDate == $de1.getDrugEraStartDate() 
	&& drugConceptId == $clinDrugConcept2.getConceptId() && ingredientConceptId == $clinDrugConcept1.getConceptId())                
    then	
        RHSState rhsNN = new RHSState("high dose fluconazole and fentanyl", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
        
        String s = String.format(
          "Fluconazole - Fentanyl interaction for patient: %s.\n\tClinical implication: Possible increased risk of opioid toxicity\n\tMitigating factor: Co-prescription of fluconazole and fentanyl (%s).\n\tRecommendation: Assess risk and take action if necessary.\n\tExplanation:  Fluconazole inhibits CYP3A4, which may cause an increase in opioid plasma concentration.ï€ ", 
          $de1.getPersonId(), 
          $dexp1.getDrugConceptId());
        System.out.println(s);
end

rule "FLUCONAZOLE - OPIOIDS -- OXYCODONE"
    when
        $rhs : RHSState(stateName == "basic concomitant exposure of a high dose of fluconazole and an opioid" && state == "yes")
        
        // Fentanyl drug era
        $clinDrugConcept1 : ConceptSetItem(csName == "Oxycodones Ingredients")
        $de1 : DrugEra(personId == $rhs.getPerson().getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())
                                      
        // Specific fentanyl exposure 
        $clinDrugConcept2 : ConceptSetItem(csName == "Oxycodones")
        $dexp1 : ExtendedDrugExposure(personId == $rhs.getPerson().getPersonId() && drugExposureStartDate == $de1.getDrugEraStartDate() 
	&& drugConceptId == $clinDrugConcept2.getConceptId() && ingredientConceptId == $clinDrugConcept1.getConceptId() && dailyDosage > 20.0)                
    then	
        RHSState rhsNN = new RHSState("high dose fluconazole and oxycodone", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
        
        String s = String.format(
          "Fluconazole - Oxycodone interaction for patient: %s.\n\tClinical implication: Possible increased risk of opioid toxicity\n\tMitigating factor: Co-prescription of fluconazole and a high dose of oxycodone (Daily Dosage: %s mg/day, Threshold Value 20.0 mg/day).\n\tRecommendation: Assess risk and take action if necessary.\n\tExplanation:  Fluconazole inhibits CYP3A4, which may cause an increase in opioid plasma concentration.ï€ ", 
          $de1.getPersonId(), 
          $dexp1.getDailyDosage());
        System.out.println(s);
end

rule "EPINEPHRINE - BETA-BLOCKERS -- NO FILTER"
    when
      // Epinephrine ingredient drug era
      $clinDrugConcept1 : ConceptSetItem(csName == "Epinephrines Ingredients")
      $de1 : DrugEra(drugConceptId == $clinDrugConcept1.getConceptId()) 
      
      // Beta-blocker ingredient drug era
      $clinDrugConcept2 : ConceptSetItem(csName == "Beta-Blockers Ingredients")
      $de2 : DrugEra(PersonId == $de1.getPersonId() && drugConceptId == $clinDrugConcept2.getConceptId())

      // Specific epinephrine exposure
      $clinDrugConcept3 : ConceptSetItem(csName == "Epinephrines") // concept set excludes opthalmic and inhaled epinephrine
      $dexp1 : ExtendedDrugExposure(personId == $de1.getPersonId() && drugExposureStartDate == $de1.getDrugEraStartDate() 
      && drugConceptId == $clinDrugConcept3.getConceptId() && ingredientConceptId == $clinDrugConcept1.getConceptId())
   
      // Specific beta-blocker exposure
      $clinDrugConcept4 : ConceptSetItem(csName == "Beta-Blockers")
      $dexp2 : ExtendedDrugExposure(personId == $de1.getPersonId() && drugExposureStartDate == $de2.getDrugEraStartDate() 
      && drugConceptId == $clinDrugConcept4.getConceptId() && ingredientConceptId == $clinDrugConcept2.getConceptId())

      $person : Person(personId == $de1.getPersonId())
    then	
      // Create a state object for the current node in the decision tree to be used by other LHS
      RHSState rhsCur = new RHSState("basic concomitant exposure of epinephrine and a beta-blocker", "yes", $person);
      insertLogical(rhsCur);
    
      String s = String.format(
          "Matched drug exposures for the patient at the clinical drug level: Patient ID: %s; Epinephrine: %s; Beta-Blocker: %s.", 
          $de1.getPersonId(), 
          $clinDrugConcept3.getConceptId(), 
          $clinDrugConcept4.getConceptId());
      System.out.println(s);
end

rule "EPINEPHRINE - BETA-BLOCKERS -- Non-Selective Beta-Blockers"
    when
	// Fist check if patient was exposed to epinephrine and a beta-blockers
        $rhs : RHSState(stateName == "basic concomitant exposure of epinephrine and a beta-blocker" && state == "yes", $person : person)
        // Non-selective BB drug era
        $clinDrugConcept1 : ConceptSetItem(csName == "Non-Selective Beta-Blockers Ingredients") // includes Timolol
        $de1 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())        
        // Specific non-selective BB exposure
        $clinDrugConcept2 : ConceptSetItem(csName == "Non-Selective Beta-Blockers") // includes Timolol oral, eliminating the need for a separate rule
        $dexp1 : ExtendedDrugExposure(personId == $person.getPersonId() && drugExposureStartDate == $de1.getDrugEraStartDate() && drugConceptId == $clinDrugConcept2.getConceptId() && ingredientConceptId == $clinDrugConcept1.getConceptId())                
    then	
        RHSState rhsNN = new RHSState("non-selective beta-blockers", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
        
        String s = String.format(
          "Epinephrine - Beta-blocker interaction for patient: %s.\n\tClinical implication: High risk of acute hypertensive reaction.\n\tMitigating factor: Presence of a non-selective beta-blocker (%s).\n\tRecommendation: Avoid if possible, treat with cardioselective beta-blocker instead.\n\tExplanation: When a systemic dose of epinephrine is given to a person on one of these nonselective beta-blockers, an acute hypertensive reaction is almost certain. Systolic BPs of 250 mm/Hg are not uncommon. \n\tMost people can probably withstand a short episode of such a hypertensive reaction without permanent sequelae, but strokes have occurred in susceptible patients.", 
          $de1.getPersonId(), 
          $dexp1.getDrugConceptId());
        System.out.println(s);
end

rule "EPINEPHRINE - BETA-BLOCKERS -- Timolol (CYP2D6 Inhibitors)"
    when
	// Fist check if patient was exposed to epinephrine and a beta-blockers
        $rhs : RHSState(stateName == "basic concomitant exposure of epinephrine and a beta-blocker" && state == "yes", $person : person)
        // Timolol drug era
        $clinDrugConcept1 : ConceptSetItem(csName == "Timolols Ingredients")
        $de1 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())        
        // Timolol drug exposure
        $clinDrugConcept2 : ConceptSetItem(csName == "Timolols Eye Drops")
        $dexp1 : ExtendedDrugExposure(personId == $person.getPersonId() && drugExposureStartDate == $de1.getDrugEraStartDate() && drugConceptId == $clinDrugConcept2.getConceptId() && ingredientConceptId == $clinDrugConcept1.getConceptId())      
	// CYP2D6 inhibitor drug era
        $clinDrugConcept3 : ConceptSetItem(csName == "CYP2D6 Inhibitors Ingredients")
        $de2 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept3.getConceptId())        
        // CYP2D6 inhibitor drug exposure
        $clinDrugConcept4 : ConceptSetItem(csName == "CYP2D6 Inhibitors")
        $dexp2 : ExtendedDrugExposure(personId == $person.getPersonId() && drugExposureStartDate == $de2.getDrugEraStartDate() && drugConceptId == $clinDrugConcept4.getConceptId() && ingredientConceptId == $clinDrugConcept3.getConceptId())   
    then	
        RHSState rhsNN = new RHSState("timolol eye drops and cyp2d6 inhibitor", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
        
        String s = String.format(
          "Epinephrine - Beta-blocker interaction for patient: %s.\n\tClinical implication: Risk of acute hypertensive reaction.\n\tMitigating factor: Timolol eye drops given in presence of potent CYP2D6 inhibitor and epinephrine.\n\tRecommendation: Use only if benefit outweighs risk.\n\tExplanation: Timolol is a nonselective beta-blocker, and timolol eye drops have been shown to produce systemic beta-blockade. Timolol is metabolized by CYP2D6, and patients who are taking moderate to potent \n\tCYP2D6 inhibitors may develop higher timolol plasma concentrations following timolol ophthalmic aqueous drops, which could lead to an acute hypertensive reaction.", 
          $de1.getPersonId());
        System.out.println(s);
end

rule "EPINEPHRINE - BETA-BLOCKERS -- Timolol (No CYP2D6 Inhibitors)"
    when
	// Fist check if patient was exposed to epinephrine and a beta-blockers
        $rhs : RHSState(stateName == "basic concomitant exposure of epinephrine and a beta-blocker" && state == "yes", $person : person)	
	// Insure that the metropolol dosage is not above the threshold
	not ($rhs2 : RHSState(stateName == "timolol eye drops and cyp2d6 inhibitor" && state == "yes" && person.getPersonId() == $person.getPersonId()))
        // Timolol drug era
        $clinDrugConcept1 : ConceptSetItem(csName == "Timolols Ingredients")
        $de1 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())        
        // Timolol drug exposure
        $clinDrugConcept2 : ConceptSetItem(csName == "Timolols Eye Drops")
        $dexp1 : ExtendedDrugExposure(personId == $person.getPersonId() && drugExposureStartDate == $de1.getDrugEraStartDate() && drugConceptId == $clinDrugConcept2.getConceptId() && ingredientConceptId == $clinDrugConcept1.getConceptId()) 
    then	
        RHSState rhsNN = new RHSState("timolol eye drops", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
        
        String s = String.format(
          "Epinephrine - Beta-blocker interaction for patient: %s.\n\tClinical implication: Risk of acute hypertensive reaction.\n\tMitigating factor: Timolol eye drops given with epinephrine.\n\tRecommendation: Assess risk and take action if necessary.\n\tExplanation: Many cases of systemic beta-blockade have been reported with aqueous timolol eye drops, so a hypertensive reaction is possible.", 
          $de1.getPersonId(), 
          $dexp1.getDailyDosage());
        System.out.println(s);
end

rule "EPINEPHRINE - BETA-BLOCKERS -- Atenolol (Clearance)"
    when
	// Fist check if patient was exposed to epinephrine and a beta-blockers
        $rhs : RHSState(stateName == "basic concomitant exposure of epinephrine and a beta-blocker" && state == "yes", $person : person)
        // Atenolol drug era
        $clinDrugConcept1 : ConceptSetItem(csName == "Atenolols Ingredients")
        $de1 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())        
        // Atenolol drug exposure
        $clinDrugConcept2 : ConceptSetItem(csName == "Atenolols")
        $dexp1 : ExtendedDrugExposure(personId == $person.getPersonId() && drugExposureStartDate == $de1.getDrugEraStartDate() && drugConceptId == $clinDrugConcept2.getConceptId() && ingredientConceptId == $clinDrugConcept1.getConceptId())
	// Creatinine clearance level check, alert if below 40
	$measurement : Measurement(personId == $person.getPersonId() && measurementConceptId == 3016723 && valueAsNumber < 40 && unitConceptId == 8795)
    then	
        RHSState rhsNN = new RHSState("atenolol and low clearance", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
        
        String s = String.format(
          "Epinephrine - Beta-blocker interaction for patient: %s.\n\tClinical implication: Risk of acute hypertensive reaction.\n\tMitigating factor: Atenolol and a low creatinine clearance level (%s mL/min, compared to the threshold value of 40 mL/min).\n\tRecommendation: Assess risk and take action if necessary.\n\tExplanation: Atenolol undergoes renal elimination and may produce nonselective beta-blockade with significant renal impairment, which can cause an acute hypertensive reaction.", 
          $de1.getPersonId(), 
          $measurement.getValueAsNumber());
        System.out.println(s);
end

rule "EPINEPHRINE - BETA-BLOCKERS -- Atenolol (Dosage)"
    when
	// Fist check if patient was exposed to epinephrine and a beta-blockers
        $rhs : RHSState(stateName == "basic concomitant exposure of epinephrine and a beta-blocker" && state == "yes", $person : person)	
	// Next, make sure the patient isn't renally impaired
	not ($rhs2 : RHSState(stateName == "atenolol and low clearance" && state == "yes" && person.getPersonId() == $person.getPersonId()))
        // Atenolol drug era
        $clinDrugConcept1 : ConceptSetItem(csName == "Atenolols Ingredients")
        $de1 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())        
        // Atenolol drug exposure and dosage check, alert if above 100 mg/day
        $clinDrugConcept2 : ConceptSetItem(csName == "Atenolols")
        $dexp1 : ExtendedDrugExposure(personId == $person.getPersonId() && drugExposureStartDate == $de1.getDrugEraStartDate() && drugConceptId == $clinDrugConcept2.getConceptId() 
	  && ingredientConceptId == $clinDrugConcept1.getConceptId() && dailyDosage > 100 )                
    then	
        RHSState rhsNN = new RHSState("high atenolol dosage", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
        
        String s = String.format(
          "Epinephrine - Beta-blocker interaction for patient: %s.\n\tClinical implication: Risk of acute hypertensive reaction.\n\tMitigating factor: High dosage of atenolol (Daily Dosage: %s mg/day, compared to the threshold value of 100.0 mg/day).\n\tRecommendation: Assess risk and take action if necessary.\n\tExplanation: At doses over 100 mg/day, atenolol can result in nonselective beta-blockade, which can cause an acute hypertensive reaction.", 
          $de1.getPersonId(), 
          $dexp1.getDailyDosage());
        System.out.println(s);
end

rule "EPINEPHRINE - BETA-BLOCKERS -- Bisoprolol (Clearance)"
    when
	// Fist check if patient was exposed to epinephrine and a beta-blockers
        $rhs : RHSState(stateName == "basic concomitant exposure of epinephrine and a beta-blocker" && state == "yes", $person : person)
        // Bisoprolol drug era
        $clinDrugConcept1 : ConceptSetItem(csName == "Bisoprolols Ingredients")
        $de1 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())        
        // Bisoprolol drug exposure
        $clinDrugConcept2 : ConceptSetItem(csName == "Bisoprolols")
        $dexp1 : ExtendedDrugExposure(personId == $person.getPersonId() && drugExposureStartDate == $de1.getDrugEraStartDate() && drugConceptId == $clinDrugConcept2.getConceptId() && ingredientConceptId == $clinDrugConcept1.getConceptId())
	// Creatinine clearance level check, alert if below 40
	$measurement : Measurement(personId == $person.getPersonId() && measurementConceptId == 3016723 && valueAsNumber < 40 && unitConceptId == 8795)
    then	
        RHSState rhsNN = new RHSState("bisoprolol and low clearance", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
        
        String s = String.format(
          "Epinephrine - Beta-blocker interaction for patient: %s.\n\tClinical implication: Risk of acute hypertensive reaction.\n\tMitigating factor: Bisoprolol and a low creatinine clearance level (%s mL/min, compared to the threshold value of 40 mL/min).\n\tRecommendation: Assess risk and take action if necessary.\n\tExplanation: Bisoprolol undergoes renal elimination and may produce nonselective beta-blockade with significant renal impairment, which can cause an acute hypertensive reaction.", 
          $de1.getPersonId(), 
          $measurement.getValueAsNumber());
        System.out.println(s);
end

rule "EPINEPHRINE - BETA-BLOCKERS -- Bisoprolol (Dosage)"
    when
	// Fist check if patient was exposed to epinephrine and a beta-blockers
        $rhs : RHSState(stateName == "basic concomitant exposure of epinephrine and a beta-blocker" && state == "yes", $person : person)	
	// Next, make sure the patient isn't renally impaired
	not ($rhs2 : RHSState(stateName == "bisoprolol and low clearance" && state == "yes" && person.getPersonId() == $person.getPersonId()))
        // Bisoprolol drug era
        $clinDrugConcept1 : ConceptSetItem(csName == "Bisoprolols Ingredients")
        $de1 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())        
        // Bisoprolol drug exposure and dosage check, alert if above 20 mg/day
        $clinDrugConcept2 : ConceptSetItem(csName == "Bisoprolols")
        $dexp1 : ExtendedDrugExposure(personId == $person.getPersonId() && drugExposureStartDate == $de1.getDrugEraStartDate() && drugConceptId == $clinDrugConcept2.getConceptId() 
	  && ingredientConceptId == $clinDrugConcept1.getConceptId() && dailyDosage > 20 )                
    then	
        RHSState rhsNN = new RHSState("high bisoprolol dosage", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
        
        String s = String.format(
          "Epinephrine - Beta-blocker interaction for patient: %s.\n\tClinical implication: Risk of acute hypertensive reaction.\n\tMitigating factor: High dosage of bisoprolol (Daily Dosage: %s mg/day, compared to the threshold value of 20.0 mg/day).\n\tRecommendation: Assess risk and take action if necessary.\n\tExplanation: At doses of 20 mg/day or higher, bisoprolol can result in nonselective beta-blockade, which can cause an acute hypertensive reaction.", 
          $de1.getPersonId(), 
          $dexp1.getDailyDosage());
        System.out.println(s);
end

rule "EPINEPHRINE - BETA-BLOCKERS -- Esmolol" // THIS RULE IS INCOMPLETE, NOT FUNCTIONING CORRECTLY
    when
	// Fist check if patient was exposed to epinephrine and a beta-blockers
        $rhs : RHSState(stateName == "basic concomitant exposure of epinephrine and a beta-blocker" && state == "yes", $person : person)	
        // Esmolol drug era
        $clinDrugConcept1 : ConceptSetItem(csName == "Esmolols Ingredients")
        $de1 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())        
        // Esmolol drug exposure and dosage check, alert if above 300 mcg/kg/ml
        $clinDrugConcept2 : ConceptSetItem(csName == "Esmolols")
        $dexp1 : ExtendedDrugExposure(personId == $person.getPersonId() && drugExposureStartDate == $de1.getDrugEraStartDate() && drugConceptId == $clinDrugConcept2.getConceptId() 
	  && ingredientConceptId == $clinDrugConcept1.getConceptId() && dailyDosage > 300 )                
    then	
        RHSState rhsNN = new RHSState("high esmolol dosage", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
        
        String s = String.format(
          "Epinephrine - Beta-blocker interaction for patient: %s.\n\tClinical implication: Risk of acute hypertensive reaction.\n\tMitigating factor: High dosage of esmolol (Daily Dosage: %s mcg/kg/min, compared to the threshold value of 300.0 mcg/kg/min).\n\tRecommendation: Assess risk and take action if necessary.\n\tExplanation: At doses over 300 mcg/kg/min, esmolol can result in nonselective beta-blockade, which can cause an acute hypertensive reaction.", 
          $de1.getPersonId(), 
          $dexp1.getDailyDosage());
        System.out.println(s);
end

rule "EPINEPHRINE - BETA-BLOCKERS -- Metoprolol (Dosage)"
    when
	// Fist check if patient was exposed to epinephrine and a beta-blockers
        $rhs : RHSState(stateName == "basic concomitant exposure of epinephrine and a beta-blocker" && state == "yes", $person : person)	
        // Metoprolol drug era
        $clinDrugConcept1 : ConceptSetItem(csName == "Metoprolols Ingredients")
        $de1 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())        
        // Metoprolol drug exposure and dosage check, alert if above 100 mg/day
        $clinDrugConcept2 : ConceptSetItem(csName == "Metoprolols")
        $dexp1 : ExtendedDrugExposure(personId == $person.getPersonId() && drugExposureStartDate == $de1.getDrugEraStartDate() && drugConceptId == $clinDrugConcept2.getConceptId() 
	  && ingredientConceptId == $clinDrugConcept1.getConceptId() && dailyDosage > 100 )                
    then	
        RHSState rhsNN = new RHSState("high metoprolol dosage", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
        
        String s = String.format(
          "Epinephrine - Beta-blocker interaction for patient: %s.\n\tClinical implication: Risk of acute hypertensive reaction.\n\tMitigating factor: High dosage of metoprolol (Daily Dosage: %s mg/day, compared to the threshold value of 100.0 mg/day).\n\tRecommendation: Assess risk and take action if necessary.\n\tExplanation: At doses over 100 mg/day, metoprolol can result in nonselective beta-blockade, which can cause an acute hypertensive reaction.", 
          $de1.getPersonId(), 
          $dexp1.getDailyDosage());
        System.out.println(s);
end

rule "EPINEPHRINE - BETA-BLOCKERS -- Metoprolol (CYP2D6 Inhibitors)"
    when
	// Fist check if patient was exposed to epinephrine and a beta-blockers
        $rhs : RHSState(stateName == "basic concomitant exposure of epinephrine and a beta-blocker" && state == "yes", $person : person)	
	// Insure that the metropolol dosage is not above the threshold
	not ($rhs2 : RHSState(stateName == "high metoprolol dosage" && state == "yes" && person.getPersonId() == $person.getPersonId()))
        // Metoprolol drug era
        $clinDrugConcept1 : ConceptSetItem(csName == "Metoprolols Ingredients")
        $de1 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())        
        // Metoprolol drug exposure
        $clinDrugConcept2 : ConceptSetItem(csName == "Metoprolols")
        $dexp1 : ExtendedDrugExposure(personId == $person.getPersonId() && drugExposureStartDate == $de1.getDrugEraStartDate() && drugConceptId == $clinDrugConcept2.getConceptId() && ingredientConceptId == $clinDrugConcept1.getConceptId())      
	// CYP2D6 inhibitor drug era
        $clinDrugConcept3 : ConceptSetItem(csName == "CYP2D6 Inhibitors Ingredients")
        $de2 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept3.getConceptId())        
        // CYP2D6 inhibitor drug exposure
        $clinDrugConcept4 : ConceptSetItem(csName == "CYP2D6 Inhibitors")
        $dexp2 : ExtendedDrugExposure(personId == $person.getPersonId() && drugExposureStartDate == $de2.getDrugEraStartDate() && drugConceptId == $clinDrugConcept4.getConceptId() && ingredientConceptId == $clinDrugConcept3.getConceptId())   
    then	
        RHSState rhsNN = new RHSState("metoprolol and cyp2d6 inhibitor", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
        
        String s = String.format(
          "Epinephrine - Beta-blocker interaction for patient: %s.\n\tClinical implication: Risk of acute hypertensive reaction.\n\tMitigating factor: Metoprolol given in presence of potent CYP2D6 inhibitor.\n\tRecommendation: Assess risk and take action if necessary.\n\tExplanation: Metoprolol is metabolized by CYP2D6, and patients who are receiving moderate to potent CYP2D6 inhibitors may develop higher \n\tmetoprolol plasma concentrations and nonselective beta-blockade, which could lead to an acute hypertensive reaction.", 
          $de1.getPersonId(), 
          $dexp1.getDailyDosage());
        System.out.println(s);
end

rule "EPINEPHRINE - BETA-BLOCKERS -- Nebivolol (Dosage)"
    when
	// Fist check if patient was exposed to epinephrine and a beta-blockers
        $rhs : RHSState(stateName == "basic concomitant exposure of epinephrine and a beta-blocker" && state == "yes", $person : person)	
        // Nebivolol drug era
        $clinDrugConcept1 : ConceptSetItem(csName == "Nebivolols Ingredients")
        $de1 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())        
        // Nebivolol drug exposure and dosage check, alert if above 10 mg/day
        $clinDrugConcept2 : ConceptSetItem(csName == "Nebivolols")
        $dexp1 : ExtendedDrugExposure(personId == $person.getPersonId() && drugExposureStartDate == $de1.getDrugEraStartDate() && drugConceptId == $clinDrugConcept2.getConceptId() 
	  && ingredientConceptId == $clinDrugConcept1.getConceptId() && dailyDosage > 10 )                
    then	
        RHSState rhsNN = new RHSState("high nebivolol dosage", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
        
        String s = String.format(
          "Epinephrine - Beta-blocker interaction for patient: %s.\n\tClinical implication: Risk of acute hypertensive reaction.\n\tMitigating factor: High dosage of nebivolol (Daily Dosage: %s mg/day, compared to the threshold value of 10.0 mg/day).\n\tRecommendation: Assess risk and take action if necessary.\n\tExplanation: At doses over 10 mg/day, nebivolol can result in nonselective beta-blockade, which can cause an acute hypertensive reaction.", 
          $de1.getPersonId(), 
          $dexp1.getDailyDosage());
        System.out.println(s);
end

rule "EPINEPHRINE - BETA-BLOCKERS -- Nebivolol (CYP2D6 Inhibitors)"
    when
	// Fist check if patient was exposed to epinephrine and a beta-blockers
        $rhs : RHSState(stateName == "basic concomitant exposure of epinephrine and a beta-blocker" && state == "yes", $person : person)	
	// Insure that the metropolol dosage is not above the threshold
	not ($rhs2 : RHSState(stateName == "high nebivolol dosage" && state == "yes" && person.getPersonId() == $person.getPersonId()))
        // Nebivolol drug era
        $clinDrugConcept1 : ConceptSetItem(csName == "Nebivolols Ingredients")
        $de1 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())        
        // Nebivolol drug exposure
        $clinDrugConcept2 : ConceptSetItem(csName == "Nebivolols")
        $dexp1 : ExtendedDrugExposure(personId == $person.getPersonId() && drugExposureStartDate == $de1.getDrugEraStartDate() && drugConceptId == $clinDrugConcept2.getConceptId() && ingredientConceptId == $clinDrugConcept1.getConceptId())      
	// CYP2D6 inhibitor drug era
        $clinDrugConcept3 : ConceptSetItem(csName == "CYP2D6 Inhibitors Ingredients")
        $de2 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept3.getConceptId())        
        // CYP2D6 inhibitor drug exposure
        $clinDrugConcept4 : ConceptSetItem(csName == "CYP2D6 Inhibitors")
        $dexp2 : ExtendedDrugExposure(personId == $person.getPersonId() && drugExposureStartDate == $de2.getDrugEraStartDate() && drugConceptId == $clinDrugConcept4.getConceptId() && ingredientConceptId == $clinDrugConcept3.getConceptId())   
    then	
        RHSState rhsNN = new RHSState("nebivolol and cyp2d6 inhibitor", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
        
        String s = String.format(
          "Epinephrine - Beta-blocker interaction for patient: %s.\n\tClinical implication: Risk of acute hypertensive reaction.\n\tMitigating factor: Nebivolol given in presence of a potent CYP2D6 inhibitor.\n\tRecommendation: Assess risk and take action if necessary.\n\tExplanation: Nebivolol is metabolized by CYP2D6, and patients who are receiving moderate to potent CYP2D6 inhibitors may develop higher \n\tnebivolol plasma concentrations and nonselective beta-blockade, which could lead to an acute hypertensive reaction.", 
          $de1.getPersonId(), 
          $dexp1.getDailyDosage());
        System.out.println(s);
end

rule "EPINEPHRINE - BETA-BLOCKERS -- Betaxolol"
    when
	// Fist check if patient was exposed to epinephrine and a beta-blockers
        $rhs : RHSState(stateName == "basic concomitant exposure of epinephrine and a beta-blocker" && state == "yes", $person : person)
        // Betaxolol drug era
        $clinDrugConcept1 : ConceptSetItem(csName == "Betaxolols Ingredients")
        $de1 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())        
        // Betaxolol drug exposure and dosage check (no alert if below threshold
        $clinDrugConcept2 : ConceptSetItem(csName == "Betaxolols")
        $dexp1 : ExtendedDrugExposure(personId == $person.getPersonId() && drugExposureStartDate == $de1.getDrugEraStartDate() && drugConceptId == $clinDrugConcept2.getConceptId() 
	  && ingredientConceptId == $clinDrugConcept1.getConceptId() && dailyDosage > 20 )                
    then	
        RHSState rhsNN = new RHSState("high betaxolol dose", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
        
        String s = String.format(
          "Epinephrine - Beta-blocker interaction for patient: %s.\n\tClinical implication: Risk of acute hypertensive reaction.\n\tMitigating factor: High dosage of betaxolol (Daily Dosage: %s mg/day, compared to the threshold value of 20.0 mg/day).\n\tRecommendation: Assess risk and take action if necessary.\n\tExplanation: Large doses of betaxolol may result in nonselective beta-blockade, which can cause an acute hypertensive reaction.", 
          $de1.getPersonId(), 
          $dexp1.getDailyDosage());
        System.out.println(s);
end
*/
rule "IMMUNOSUPPRESSANTS - AZOLES -- NO FILTER"
    when
      // Immunosuppressant ingredient drug era
      $clinDrugConcept1 : ConceptSetItem(csName == "Immunosuppressants Ingredients")
      $de1 : DrugEra(drugConceptId == $clinDrugConcept1.getConceptId()) 
      
      // Azole Antifungals ingredient drug era
      $clinDrugConcept2 : ConceptSetItem(csName == "Azole Antifungals Ingredients")
      $de2 : DrugEra(PersonId == $de1.getPersonId() && drugConceptId == $clinDrugConcept2.getConceptId())

      // Specific immunosuppressant exposure
      $clinDrugConcept3 : ConceptSetItem(csName == "Immunosuppressants") // concept set excludes opthalmic and inhaled epinephrine
      $dexp1 : ExtendedDrugExposure(personId == $de1.getPersonId() && drugExposureStartDate == $de1.getDrugEraStartDate() 
      && drugConceptId == $clinDrugConcept3.getConceptId() && ingredientConceptId == $clinDrugConcept1.getConceptId())
   
      // Specific azole antifungals exposure
      $clinDrugConcept4 : ConceptSetItem(csName == "Azole Antifungals")
      $dexp2 : ExtendedDrugExposure(personId == $de1.getPersonId() && drugExposureStartDate == $de2.getDrugEraStartDate() 
      && drugConceptId == $clinDrugConcept4.getConceptId() && ingredientConceptId == $clinDrugConcept2.getConceptId())

      $person : Person(personId == $de1.getPersonId())
    then	
      // Create a state object for the current node in the decision tree to be used by other LHS
      RHSState rhsCur = new RHSState("basic concomitant exposure of an immunosuppressant and an azole antifungal", "yes", $person);
      insertLogical(rhsCur);
    
      String s = String.format(
          "Matched drug exposures for the patient at the clinical drug level: Patient ID: %s; Immunosuppressant: %s; Azole Antifungal: %s.", 
          $de1.getPersonId(), 
          $clinDrugConcept3.getConceptId(), 
          $clinDrugConcept4.getConceptId());
      System.out.println(s);
end

rule "IMMUNOSUPPRESSANTS - AZOLES -- Fluconazole"
    when
      // First check if patient had the basic exposure
      $rhs : RHSState(stateName == "basic concomitant exposure of an immunosuppressant and an azole antifungal" && state == "yes", $person : person)
      
      // Fluconazole ingredient drug era
      $clinDrugConcept1 : ConceptSetItem(csName == "Fluconazoles Ingredients")
      $de1 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId()) 

      // Specific fluconazole exposure
      $clinDrugConcept2 : ConceptSetItem(csName == "Fluconazoles")
      $dexp1 : ExtendedDrugExposure(personId == $de1.getPersonId() && drugExposureStartDate == $de1.getDrugEraStartDate() && drugConceptId == $clinDrugConcept2.getConceptId() && ingredientConceptId == $clinDrugConcept1.getConceptId())

    then	
      // Create a state object for the current node in the decision tree to be used by other LHS
      RHSState rhsCur = new RHSState("immunosuppressant and fluconazole", "yes", $person);
      insertLogical(rhsCur);
    
      String s = String.format(
          "Matched drug exposures for patient at the clinical drug level: Patient ID: %s; Fluconazole: %s.", // didnt include the immunosuppressant here cause it felt unnecessary
          $de1.getPersonId(),  
          $clinDrugConcept2.getConceptId());
      System.out.println(s);
end

rule "IMMUNOSUPPRESSANTS - AZOLES -- Fluconazole PO"
    when
	// First check if patient had the basic exposure
        $rhs : RHSState(stateName == "basic concomitant exposure of an immunosuppressant and an azole antifungal" && state == "yes", $person : person)	
	// Next, insure that the azole is fluconazole
	$rhs2 : RHSState(stateName == "immunosuppressant and fluconazole" && state == "yes" && person.getPersonId() == $person.getPersonId())
        // Fluconazole drug era
        $clinDrugConcept1 : ConceptSetItem(csName == "Fluconazoles Ingredients")
        $de1 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())        
        // Fluconazole PO drug exposure, make sure its above the threshhold
        $clinDrugConcept2 : ConceptSetItem(csName == "Fluconazoles PO")
        $dexp1 : ExtendedDrugExposure(personId == $person.getPersonId() && drugExposureStartDate == $de1.getDrugEraStartDate() && drugConceptId == $clinDrugConcept2.getConceptId() 
	  && ingredientConceptId == $clinDrugConcept1.getConceptId() && dailyDosage > 100)      
    then	
        RHSState rhsNN = new RHSState("immunosuppressant and high dose fluconazole", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
        
        String s = String.format(
          "Immunosuppressant - Azole interaction for patient: %s.\n\tClinical implication: Risk of immunosuppressant toxicity.\n\tMitigating factor: Presence of an immunosuppressant and a high dose of oral fluconazole (Daily Dosage: %s mg/day, compared to the threshold value of 100 mg/day).\n\tRecommendation: Assess risk and take action if necessary.\n\tExplanation: Azole antifungals inhibit cytochrome P450 (CYP450) enzymes that metabolize immunosuppressants, leading to a potential risk of toxicity.", 
          $de1.getPersonId(), 
          $dexp1.getDailyDosage());
        System.out.println(s);
end

rule "IMMUNOSUPPRESSANTS - AZOLES -- Fluconazole IV"
    when
	// First check if patient had the basic exposure
        $rhs : RHSState(stateName == "basic concomitant exposure of an immunosuppressant and an azole antifungal" && state == "yes", $person : person)	
	// Next, insure that the azole is fluconazole
	$rhs2 : RHSState(stateName == "immunosuppressant and fluconazole" && state == "yes" && person.getPersonId() == $person.getPersonId())
        // Fluconazole drug era
        $clinDrugConcept1 : ConceptSetItem(csName == "Fluconazoles Ingredients")
        $de1 : DrugEra(personId == $person.getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())        
        // Fluconazole PO drug exposure, make sure its above the threshhold
        $clinDrugConcept2 : ConceptSetItem(csName == "Fluconazoles IV")
        $dexp1 : ExtendedDrugExposure(personId == $person.getPersonId() && drugExposureStartDate == $de1.getDrugEraStartDate() && drugConceptId == $clinDrugConcept2.getConceptId() 
	  && ingredientConceptId == $clinDrugConcept1.getConceptId() && dailyDosage > 200)      
    then	
        RHSState rhsNN = new RHSState("immunosuppressant and high dose fluconazole", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
        
        String s = String.format(
          "Immunosuppressant - Azole interaction for patient: %s.\n\tClinical implication: Risk of immunosuppressant toxicity.\n\tMitigating factor: Presence of an immunosuppressant and a high dose of intravenous fluconazole (Daily Dosage: %s mg/day, compared to the threshold value of 200 mg/day).\n\tRecommendation: Assess risk and take action if necessary.\n\tExplanation: Azole antifungals inhibit cytochrome P450 (CYP450) enzymes that metabolize immunosuppressants, leading to a potential risk of toxicity.", 
          $de1.getPersonId(), 
          $dexp1.getDailyDosage());
        System.out.println(s);
end

rule "IMMUNOSUPPRESSANTS - AZOLES -- No Fluconazole"
    when
      // First check if patient had the basic exposure
      $rhs : RHSState(stateName == "basic concomitant exposure of an immunosuppressant and an azole antifungal" && state == "yes", $person : person)
      
      // Insure that the patient was not prescribed fluconazole
      not ($rhs2 : RHSState(stateName == "immunosuppressant and fluconazole" && state == "yes" && person.getPersonId() == $person.getPersonId()))      
      
      // Azole Antifungals ingredient drug era
      $clinDrugConcept1 : ConceptSetItem(csName == "Azole Antifungals Ingredients")
      $de1 : DrugEra(PersonId == $person.getPersonId() && drugConceptId == $clinDrugConcept1.getConceptId())
      
       // Specific azole antifungals exposure
      $clinDrugConcept2 : ConceptSetItem(csName == "Azole Antifungals")
      $dexp1 : ExtendedDrugExposure(personId == $de1.getPersonId() && drugExposureStartDate == $de1.getDrugEraStartDate() 
      && drugConceptId == $clinDrugConcept2.getConceptId() && ingredientConceptId == $clinDrugConcept1.getConceptId())     

    then	
        RHSState rhsNN = new RHSState("immunosuppressant and non-fluconazole antifungal", "yes", $rhs.getPerson());
        insertLogical(rhsNN);
        
        String s = String.format(
          "Immunosuppressant - Azole interaction for patient: %s.\n\tClinical implication: Risk of immunosuppressant toxicity.\n\tMitigating factor: Presence of an immunosuppressant and a non-fluconazole azole (%s).\n\tRecommendation: Assess risk and take action if necessary.\n\tExplanation: Azole antifungals inhibit cytochrome P450 (CYP450) enzymes that metabolize immunosuppressants, leading to a potential risk of toxicity.", 
          $de1.getPersonId(), 
          $dexp1.getDrugConceptId());
        System.out.println(s);
end
